/*
Deployment script for PidiliteMeetingAppPhase2

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "PidiliteMeetingAppPhase2"
:setvar DefaultFilePrefix "PidiliteMeetingAppPhase2"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering Procedure [dbo].[usp_MeetingDetails_Get]...';


GO
ALTER PROCEDURE [dbo].[usp_MeetingDetails_Get]
    @Id BIGINT = 0,
    @Date DATETIME = NULL,
    @ParentMeetingId BIGINT = NULL,
    @ChatId NVARCHAR(500) = NULL
AS
BEGIN
    IF(@Id = 0)
    BEGIN
        SET @Id = ( 
                                SELECT MeetingId 
                                FROM dbo.[Trn_MeetingDetails] WITH(NOLOCK)
                                WHERE ChatId = @ChatId 
                                 AND (CONVERT(DATE,StartDateTime,103) ) = (CONVERT(DATE,@Date,103) )
                                 AND IsActive = 1
                              )
    END

    SELECT
    @ParentMeetingId=ParentMeetingId
    FROM dbo.[Trn_MeetingDetails] WITH(NOLOCK)
    WHERE MeetingId = @Id AND IsActive = 1
    
	--Meeting Details
	SELECT
	 MD.MeetingId 
    ,MD.MeetingTypeId
    ,MType.TypeName AS MeetingType --Meeting TypeName
    ,MD.MeetingTitleId
    ,MD.MeetingTitle
    --,MTitle.MeetingTitle --Meeting Title
    ,MD.TeamsId 
    ,MD.ChannelId 
    ,MD.ChannelName
    ,MD.LocationId 
    ,MD.LocationName 
    ,MD.MeetingDescription 
    ,MD.CreatedBy
    ,MD.CreatedOn 
    ,MD.CreatedByEmail 
    ,MD.CreatedByADID 
    ,MD.UpdatedBy 
    ,MD.UpdatedOn 
    ,MD.UpdatedByEmail 
    ,MD.UpdatedByADID 
    ,MD.DivisionId 
    ,MD.DivisionName 
    ,MD.VerticalId 
    ,MD.VerticalName 
    ,MD.TimeZone 
    ,MD.StartDateTime 
    ,MD.EndDateTime
    ,MD.StartDateTimeUTC 
    ,MD.EndDateTimeUTC 
    ,MD.AllDayEvent 
    ,MD.RepeatOption 
    ,MD.AnchorName 
    ,MD.AnchorEmail 
    ,MD.AnchorADID
    ,MD.OrganiserName 
    ,MD.OrganiserEmail 
    ,MD.OrganiserADID
    ,MD.ICalUId
    ,MD.EventId 
    ,MD.JoinUrl 
    ,MD.SeriesMasterId
    ,MD.ChatId
    ,MD.EventType
    ,MD.ParentMeetingId
    ,MD.MeetingStatus
    ,MD.CreatedBy
    ,MD.CreatedByEmail,
    MD.CreatedByADID
    ,MD.CreatedOn
    ,IsConducted
	FROM dbo.[Trn_MeetingDetails] MD WITH(NOLOCK)
	INNER JOIN dbo.[Mst_MeetingType] MType WITH(NOLOCK) ON MD.MeetingTypeId = MType.TypeId
	WHERE MD.MeetingId = @Id 
    AND MD.MeetingStatus != 'Cancelled'

    --Meeting Occurrence
    SELECT
     MRD.RepeatId
    ,MRD.MeetingId 
    ,MRD.Frequency 
    ,MRD.StartDate 
    ,MRD.RepeatEvery 
    ,MRD.OnADay 
    ,MRD.OnTheWeek 
    ,MRD.OnTheWeekDay 
    ,MRD.OnTheMonth 
    ,MRD.EndDate
    ,MRD.StartDateUTC
    ,MRD.EndDateUTC
    FROM dbo.[Trn_MeetingRepeatDetails] MRD WITH(NOLOCK)
    INNER JOIN dbo.[Trn_MeetingDetails] MD WITH(NOLOCK) ON MD.MeetingId = MRD.MeetingId
    WHERE 
    (
    MRD.MeetingId = @Id
    OR 
    MRD.MeetingId = ISNULL(@ParentMeetingId,ParentMeetingId)
    )
    AND MD.MeetingStatus != 'Cancelled'
    AND MRD.IsActive = 1
    --ORDER BY MRD.MeetingId, MRD.RepeatId

    --Meeting Participants
    SELECT
    MP.ParticipantId
    ,MP.MeetingId
    ,MP.ParticipantName
    ,MP.ParticipantEmail
    ,MP.ParticipantADID
    ,MP.ParticipantType
    ,MP.CreatedOn
    ,MP.UpdatedOn
    ,MP.Active
    FROM dbo.[Trn_MeetingParticipants] MP WITH(NOLOCK)
    WHERE MP.MeetingId = @Id
    AND MP.Active = 1
    --ORDER BY MP.MeetingId, ParticipantId


    --Meeting Files
    SELECT
    MFU.FileId
    ,MFU.MeetingId
    ,MFU.[FileName]
    ,MFU.FileUrl
    ,MFU.ContentType
    FROM dbo.[Trn_MeetingFileUpload] MFU WITH(NOLOCK)
    WHERE MFU.MeetingId = @Id
    AND MFU.IsActive = 1
    ORDER BY [FileName]

    --Meeting Files
    SELECT
    RES.MeetingSPOFileName,
    RES.SPOWebUrl,
    RES.SPOItemId
    FROM dbo.[MeetingSPOFileUploadResponse] RES WITH(NOLOCK)
    WHERE RES.MeetingId = @Id
    AND RES.IsActive = 1

END
GO
PRINT N'Update complete.';


GO
