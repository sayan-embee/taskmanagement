/*
Deployment script for TaskApp_Phase1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TaskApp_Phase1"
:setvar DefaultFilePrefix "TaskApp_Phase1"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Procedure [dbo].[usp_Task_GetByIdListView]...';


GO
CREATE PROCEDURE [dbo].[usp_Task_GetByIdListView]
(
	@Id BIGINT = NULL,
    @Email NVARCHAR(100) = NULL
)
AS
BEGIN

DECLARE @temp_table TABLE
(
  TaskId INT DEFAULT 0,
  RoleId INT DEFAULT 0,
  RoleName NVARCHAR(50) NULL,
  RoleCode NVARCHAR(50) NULL
)

IF EXISTS (SELECT TaskId FROM [dbo].[Trn_TaskDetails] WITH(NOLOCK) WHERE TaskId = @Id)
BEGIN

    INSERT INTO @temp_table EXEC usp_Task_CheckRole_ByTaskId @Id = @Id, @Email = @Email

    SELECT
        RoleId,
        RoleName,
        RoleCode
    FROM @temp_table

    
	SELECT
        [TaskId],
        [TaskRefNo],
        [TaskUnqId],
        [StatusId],
        [PriorityId],
        [RoleId],
        [ParentTaskId],
        [IsActive],
        [CreatedOnIST],
        [CreatedOnUTC],
        [CreatedByName],
        [CreatedByEmail],
        [CreatedByUPN],
        [CreatedByADID],
        [TaskSubject],
        [TaskDesc],
        [InitialTargetDate],
        [CurrentTargetDate],
        [AssignerName],
        [AssignerEmail],
        [AssignerUPN],
        [AssignerADID],
        [AssigneeName],
        [AssigneeEmail],
        [AssigneeUPN],
        [AssigneeADID],
        [CoordinatorName],
        [CoordinatorEmail],
        [CoordinatorUPN],
        [CoordinatorADID],
        [CollaboratorName],
        [CollaboratorEmail],
        [CollaboratorUPN],
        [CollaboratorADID]
    FROM [dbo].[Trn_TaskDetails] WITH(NOLOCK) WHERE TaskId = @Id



        SELECT
            P.[ProgressId],
            P.[TaskId],
            [RoleId],
            [ProgressRemarks],
            [UpdatedOnIST],
            [UpdatedOnUTC],
            [UpdatedByName],
            [UpdatedByEmail],
            [UpdatedByUPN],
            [UpdatedByADID],
            [AssignId],
            [AssigneeName],
            [AssigneeEmail],
            [AssigneeUPN],
            [AssigneeADID],
            [AssignmentType]
        FROM [dbo].[Trn_TaskProgressDetails] P WITH(NOLOCK) 
        INNER JOIN [dbo].[Trn_TaskAssignmentDetails] A WITH(NOLOCK) ON A.ProgressId = P.ProgressId
        WHERE P.TaskId = @Id
        ORDER BY P.ProgressId DESC


        SELECT
            P.[ProgressId],
            P.[TaskId],
            P.[RoleId],
            [ProgressRemarks],
            [UpdatedOnIST],
            [UpdatedOnUTC],
            [UpdatedByName],
            [UpdatedByEmail],
            [UpdatedByUPN],
            [UpdatedByADID],
            [HistoryId],
            [StatusId],
            [PriorityId],
            [TaskRefNo],
            [TaskUnqId],
            [ParentTaskId],
            [TaskSubject],
            [TaskDesc],
            [InitialTargetDate],
            [CurrentTargetDate],
            [AssignerName],
            [AssignerEmail],
            [AssignerUPN],
            [AssignerADID],
            [AssigneeName],
            [AssigneeEmail],
            [AssigneeUPN],
            [AssigneeADID],
            [CoordinatorName],
            [CoordinatorEmail],
            [CoordinatorUPN],
            [CoordinatorADID],
            [CollaboratorName],
            [CollaboratorEmail],
            [CollaboratorUPN],
            [CollaboratorADID]
        FROM [dbo].[Trn_TaskProgressDetails] P WITH(NOLOCK) 
        INNER JOIN [dbo].[Trn_TaskHistoryDetails] H WITH(NOLOCK) ON H.ProgressId = P.ProgressId
        WHERE P.TaskId = @Id
        ORDER BY P.ProgressId DESC

END

END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Update complete.';


GO
